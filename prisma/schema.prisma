// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mongodb"
  url      = env("DATABASE_URL")
}

enum ResearcherType {
  academic
  medical
  corporate
  not_researcher
}

enum Gender {
  male
  female
}

model User {
  id               String         @id @default(cuid())
  firstName        String
  lastName         String
  email            String?        @unique
  emailVerified    DateTime?
  phone            String?
  phoneVerified  Boolean?
  image            String?
  password         String?        @db.Text
  role             String         @default("user")
  researcherType   ResearcherType
  institute        String?
  department       String?
  gender           Gender
  termsAcceptedAt  DateTime
  accounts         Account[]
  sessions         Session[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt

  @@index([email])
  @@index([researcherType])
  @@index([createdAt])
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @map("user_id")
  type              String
  provider          String
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}